#include <bits/stdc++.h>
using namespace std;


class animal{
    private:
        int age;
        string gender;
    public:
        string color;
    
    void AgeGender(int age1, string gender1);
    void infoAnimal(){
        
        cout<<"Age: "<< age << endl;
        cout<<"Gender: "<< gender << endl;
        cout<<"Color: "<< color << endl;
    }
};

void animal :: AgeGender(int age1, string gender1){
   age = age1;
   gender = gender1;
}

int main(){

    animal dog;
    dog.AgeGender(7, "male");
    dog.color = "white";
    dog.infoAnimal();

    animal lion;
    lion.AgeGender(9, "female");
    lion.color = "brown";
    lion.infoAnimal();

    return 0;
}

















class binary{

        string s;

    public:

        void read(void);
        void chk_binary(void);
        void ones_compliment(void);
        void display(void);

};


void binary :: read(void){
    cout<<"Enter a Binary Number : " ;
    cin>>s;
    cout << endl;
}


void binary :: chk_binary(void){

    for(int i = 0; i < s.length(); i++){
        if(s.at(i) != '0' && s.at(i) != '1'){
            cout<<"Incorect binary Formate" << endl;
            break;  //exit(0); 
        }
    } 
}


void binary :: ones_compliment(void){


    for(int i = 0; i < s.length(); i++){
        if(s.at(i) == '0')
            s.at(i) = '1';
        else{
            s.at(i) = '0';
        }
    }
} 


void binary :: display(void){

    cout<< "Ones Complinent : " ;

    for(int i = 0; i<s.length(); i++){
        cout<<s.at(i);
    }
    cout<< endl;
}



int main(){


    binary a;
    a.read();
    a.chk_binary();
    a.ones_compliment();
    a.display();


    return 0;
}















class dukan{

    int itemId[100];
    int itemPrice[100];
    int counter;

    public:
        void initcounter(void){counter = 0;}
        void setprice(void);
        void displayprice(void);
};


void dukan :: setprice(void){
    cout<< "Enter Id of your item on " << counter+1 << endl;
    cin>>itemId[counter];
    cout<< "Enter price of your item" << endl;
    cin>>itemPrice[counter];
    counter++;
}


void dukan :: displayprice(void){
    for(int i = 0; i<counter; i++){
        cout<<  "The price of item with Id " << itemId[i] << " is " << itemPrice[i] << endl;
    }
}


int main(){

    dukan shop; 
    shop.initcounter();
    shop.setprice();
    shop.setprice();
    shop.setprice();
    shop.displayprice();


    return 0;
}















class employee{
		int id;
		//static int count = 1000;// syntax error
		static int count;

		public:
			void setData(void){
				cout<< "Enter the id" << endl;
				cin>>id;
				count++;
			}
			void getData(void){
				//cout<< id;
				cout<< "The id of this employee is " << id << "and this is employee number" << count << endl;
			}


			static void getcount(void){				// static function
				cout<< "The value of count is " << count << endl;
			}
	};

	int employee :: count;	//default value is 0
	//int employee :: count = 1000;

	int main(){

		employee harry, rohan, lovish;
		//employee harry;
		//harry.id = 1;
		//harry.count = 1;//cannot do this as id and count are private
		harry.setData();
		harry.getData();
		employee :: getcount();

		rohan.setData();
		rohan.getData();
		employee :: getcount();

		lovish.setData();
		lovish.getData();
		employee :: getcount();


		return 0;
	}
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    // code with harry - video 25 
/* 
class Employee{

	int id;
	int salary;

	public:
		void setId(void){
			salary = 122;
			cout<< "Enter the id of employee" << endl;
			cin>> id;
		}

		void getId(void){
			cout<< "the id of this employee is " << id << endl;
		}
};
 */


class Complex{
	int a;
	int b;
public:
	void setData(int v1, int v2){
		a = v1;
		b = v2;
	}
	void setDataBySum(Complex o1, Complex o2){
		a = o1.a + o2.a;
		b = o1.b + o2.b;
	}
	void printNumber(void){
		cout<<"Your complex number is " << a << " + " << b << "i" << endl;
	}
};


int main(){
/* 
	Employee fb[4];
	for(int i = 0; i<4; i++){
		fb[i].setId();
		fb[i].getId();
	}
 */



	Complex c1, c2, c3;
	c1.setData(1,2);
	c1.printNumber();

	c2.setData(3,4);
	c2.printNumber();

	c3.setDataBySum(c1, c2);
	c3.printNumber();

	return 0;
}














class Complex{
	int a;
	int b;

	public:
		void setNumbers(int n1, int n2){
			a = n1;
			b = n2;
		}

		friend Complex sumComplex(Complex o1, Complex o2);

		void printNumber(){
			cout<< "Your number is " << a << " + " << b << "i" << endl;
		}
};

Complex sumComplex(Complex o1, Complex o2){
	Complex o3;
	o3.setNumbers((o1.a + o2.a), (o1.b + o2.b));
	return o3;
}


int main(){

	Complex c1, c2, sum;
	c1.setNumbers(1,4);
	c2.setNumbers(5,8);
	c1.printNumber();
	c2.printNumber();

	sum = sumComplex(c1, c2);
	sum.printNumber();


	return 0;
}














// Forward declaration;
class Complex;

class Calculator{
	public:
		int add(int a, int b){
			return (a + b);
		}

		int sumRealComplex(Complex, Complex);
		int sumcompComplex(Complex, Complex);
};

class Complex{
	int a, b;
	friend int Calculator :: sumRealComplex(Complex, Complex);
	friend int Calculator :: sumcompComplex(Complex, Complex);

	public:
		void setNumber(int n1, int n2){
			a = n1; 
			b = n2;
		}

		void printNumber(){
			cout<< "Your number is " << a << " + " << b << "i" << endl;
		}
};

int Calculator :: sumRealComplex(Complex o1, Complex o2){
	return(o1.a + o2.a);
}
int Calculator :: sumcompComplex(Complex o1, Complex o2){
	return(o1.b + o2.b);
}


int main(){

	Complex o1, o2;
	o1.setNumber(1,4);
	o2.setNumber(5,7);

	Calculator calc;
	int res = calc.sumRealComplex(o1, o2);
	cout<< "The sum of real part of o1 and o2 is " << res << endl;

	int resc = calc.sumcompComplex(o1, o2);
	cout<< "The sum of real part of o1 and o2 is " << resc << endl; 

	return 0;
}


